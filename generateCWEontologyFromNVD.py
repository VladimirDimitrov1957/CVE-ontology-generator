import urllib.request
import json
import re
from datetime import datetime

def generateShell():
        with open(owl_fn, mode='w', encoding='utf-8') as out_file:
                out_file.write("""Prefix: : <http://www.semanticweb.org/cht_c/cwe#>
Prefix: owl: <http://www.w3.org/2002/07/owl#>
Prefix: rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
Prefix: rdfs: <http://www.w3.org/2000/01/rdf-schema#>
Prefix: xml: <http://www.w3.org/XML/1998/namespace>
Prefix: xsd: <http://www.w3.org/2001/XMLSchema#>

Ontology: <http://www.semanticweb.org/cht_c/cwe>

Class: CWE""")

def generateCWEsForCVE(ptd, outFile, cwes):
        global count
        for d in ptd:
                for e in d["description"]:
                        outFile.write("\r\rIndividual: " + e["value"] + "\r\tTypes:\r\t\tCWE")
                        count = count + 1
        
def generateCWEs():
        global count
        generateShell()
        print("Load json dictionaries for the years:")
        with open(owl_fn, "a", encoding="utf-8") as outFile:
                
                with open("data/nvdcve-1.1-modified.json", "r", encoding="utf-8") as inFile:
                        d = json.loads(inFile.read())
                modified = set()
                cwes = set()
                for item in d["CVE_Items"]:
                        cveID = item["cve"]["CVE_data_meta"]["ID"]
                        generateCWEsForCVE(item["cve"]["problemtype"]["problemtype_data"], outFile, cwes)
                                
                
                feeds = ["modified", "recent"]
                feeds.extend(map(str, range(2002, datetime.now().year + 1)))
                for year in feeds:
                        print(year)
                        with open("data/nvdcve-1.1-" + year + ".json", "r", encoding="utf-8") as inFile:
                                d = json.loads(inFile.read())
                        for item in d["CVE_Items"]:
                                cveID = item["cve"]["CVE_data_meta"]["ID"]
                                if cveID in modified: continue
                                generateCWEsForCVE(item["cve"]["problemtype"]["problemtype_data"], outFile, cwes)

        print(f"CWEs: {count}")                                
        print("Loaded all dictionaries")

def main():
        print("CWE Ontology Generator from NVD")
        start = datetime.now()
        print(start)
        generateCWEs()
        end = datetime.now()
        print(end)
        print(f"Elapsed: {end - start}")

owl_fn = "cwe.owl" # CWE ontology file name
count = 0

if __name__ == "__main__":
    main()
